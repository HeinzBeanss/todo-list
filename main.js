(()=>{"use strict";const e=(()=>{let e=[],d=0,o=1;document.querySelector(".sidebartop");const s=document.querySelector(".projectList"),l=document.querySelector(".todolists"),i=document.querySelector(".savebutton");i.disabled=!0;const c=document.querySelector(".addtodo");c.disabled=!0;const a=document.querySelector(".deletetodo");a.disabled=!0;const n=document.querySelector(".edittodo");n.disabled=!0;const r=document.querySelector("#deleteproject"),u=(document.querySelector("#editproject"),()=>{e.forEach((e=>{if(!1===e.deleted){const t=document.createElement("h2");t.textContent=e.name,t.classList.add("selector"),t.setAttribute("id",e.id),s.appendChild(t)}}))}),m=()=>{document.querySelectorAll(".selected").forEach((e=>{e.classList.remove("selected")})),e.forEach((e=>{e.selected=!1}))},p=()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{e.selected=!1}))})),document.querySelectorAll(".selectedtodo").forEach((e=>{e.classList.remove("selectedtodo")}))},b=()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{e.selected=!1}))}));let t=l.lastElementChild;for(;t;)l.removeChild(t),t=l.lastElementChild};return localStorage.getItem("allprojects")&&(console.log(localStorage),e=JSON.parse(localStorage.getItem("allprojects")),console.log(localStorage),u()),s.addEventListener("click",(t=>{m(),p(),t.target.classList.add("selected"),console.log(t.target),console.log(e);let d=t.target.getAttribute("id");console.log(d),e.forEach((t=>{t.id==d&&(t.selected=!0,b(),e.forEach((e=>{!0===e.selected&&!1===e.deleted&&(document.querySelector("#ptitle").textContent=e.name,e.todolists.forEach((e=>{if(!1===e.deleted){const t=document.createElement("div");t.classList.add("todocard"),t.setAttribute("id",e.id),l.appendChild(t);const d=document.createElement("h3");d.classList.add("todotitle"),d.setAttribute("contenteditable","false"),d.textContent=e.title,t.appendChild(d);const o=document.createElement("p");o.classList.add("tododesc"),o.setAttribute("contenteditable","false"),o.textContent=e.description,t.appendChild(o);const s=document.createElement("div");s.classList.add("radiobuttons"),t.appendChild(s);const i=document.createElement("p");i.classList.add("priotitle"),i.textContent="Priority:",s.appendChild(i);const c=document.createElement("input");c.classList.add("todopriolow"),c.setAttribute("id","prio"),c.setAttribute("name","prio"),c.setAttribute("type","radio"),c.setAttribute("value","low"),s.appendChild(c);const a=document.createElement("label");a.textContent="Low",a.setAttribute("for","low"),s.appendChild(a);const n=document.createElement("input");n.classList.add("todopriomedium"),n.setAttribute("id","prio"),n.setAttribute("name","prio"),n.setAttribute("type","radio"),n.setAttribute("value","medium"),s.appendChild(n);const r=document.createElement("label");r.textContent="Medium",r.setAttribute("for","medium"),s.appendChild(r);const u=document.createElement("input");u.classList.add("todopriohigh"),u.setAttribute("id","prio"),u.setAttribute("name","prio"),u.setAttribute("type","radio"),u.setAttribute("value","high"),s.appendChild(u);const m=document.createElement("label");m.textContent="High",m.setAttribute("for","high"),s.appendChild(m),"low"===e.priority?(c.setAttribute("checked",""),n.setAttribute("disabled",""),u.setAttribute("disabled","")):"medium"===e.priority?(n.setAttribute("checked",""),c.setAttribute("disabled",""),u.setAttribute("disabled","")):"high"===e.priority&&(c.setAttribute("disabled",""),n.setAttribute("disabled",""),u.setAttribute("checked",""));const p=document.createElement("div");p.classList.add("date"),t.appendChild(p);const b=document.createElement("label");b.classList.add("datelabel"),b.setAttribute("for","duedate"),b.textContent="Due: ",p.appendChild(b);const h=document.createElement("p");h.classList.add("duedate"),h.setAttribute("contenteditable","false"),h.textContent=e.duedate,p.appendChild(h)}})))})))}))})),l.addEventListener("click",(t=>{console.log(t.target),p();let d=t.target,o=d.getAttribute("class"),s=d.getAttribute("id"),l=t.target.parentNode,i=l.getAttribute("class"),c=l.getAttribute("id"),r=l.parentNode,u=(r.getAttribute("class"),r.getAttribute("id"));if(e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{e.id!=s&&e.id!=c&&e.id!=u||(e.selected=!0)}))})),console.log(e),"todolists"===o);else if("todocard"===o)console.log(o),t.target.classList.add("selectedtodo"),console.log("it's done via child.");else if("radiobuttons"===i)t.target.parentNode.parentNode.classList.add("selectedtodo"),console.log("a fucking annoying ass radio button element was pressed.");else if("date"===i)t.target.parentNode.parentNode.classList.add("selectedtodo"),console.log("a fucking annoying ass duedate shit element was pressed.");else{let e=t.target;console.log(t.target.parentNode),e.parentNode.classList.add("selectedtodo"),console.log("it's done via parent.")}n.disabled=!1,n.classList.add("online"),n.classList.remove("offline"),a.disabled=!1,a.classList.add("online"),a.classList.remove("offline")})),i.addEventListener("click",(()=>{e.forEach((e=>{if(!0===e.selected){const t=document.querySelector("#ptitle");e.name=t.textContent,document.querySelector(".selected").textContent=e.name,t.setAttribute("contenteditable","false"),e.todolists.forEach((e=>{if(!0===e.selected){document.querySelectorAll(".todotitle").forEach((e=>{e.setAttribute("contenteditable","false")})),document.querySelectorAll(".tododesc").forEach((e=>{e.setAttribute("contenteditable","false")})),document.querySelectorAll("input").forEach((e=>{e.setAttribute("disabled","")})),document.querySelectorAll(".date").forEach((e=>{e.setAttribute("contenteditable","false")}));const t=document.querySelector(".selectedtodo");e.title=t.firstChild.textContent,e.description=t.childNodes[1].textContent;for(let d=0;d<t.childNodes[2].childNodes.length;d++)t.childNodes[2].childNodes[d].checked&&(console.log(t.childNodes[2].childNodes[d]),e.priority=t.childNodes[2].childNodes[d].value,t.childNodes[2].childNodes[d].removeAttribute("disabled",""));e.duedate=t.childNodes[3].childNodes[1].textContent,console.log(e)}})),i.disabled=!0,i.classList.remove("online"),i.classList.add("offline"),c.disabled=!1,c.classList.add("online"),c.classList.remove("offline"),n.disabled=!1,n.classList.add("online"),n.classList.remove("offline")}}))})),a.addEventListener("click",(()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{!0===e.selected&&(document.querySelector(".selectedtodo").remove(),e.deleted=!0,console.log(e),c.disabled=!1,c.classList.add("online"),c.classList.remove("offline"),i.disabled=!1,i.classList.add("offline"),i.classList.remove("online"))}))})),a.disabled=!0,a.classList.add("offline"),a.classList.remove("online")})),n.addEventListener("click",(()=>{e.forEach((e=>{!0===e.selected&&(document.querySelector("#ptitle").setAttribute("contenteditable",!0),e.todolists.forEach((e=>{if(!0===e.selected){c.disabled=!0,c.classList.remove("online"),c.classList.add("offline"),i.disabled=!1,i.classList.add("online"),i.classList.remove("offline"),s.disabled=!0,l.disabled=!0;const e=document.querySelector(".selectedtodo");e.firstChild.setAttribute("contenteditable","true"),e.childNodes[1].setAttribute("contenteditable","true"),e.querySelectorAll("input").forEach((e=>{e.removeAttribute("disabled")})),e.querySelector(".duedate").setAttribute("contenteditable","true")}})))}))})),r.addEventListener("click",(()=>{e.forEach((e=>{if(!0===e.selected){const t=document.querySelector(".todolists");let d=t.lastElementChild;for(;d;)t.removeChild(d),d=t.lastElementChild;document.querySelector("#ptitle").textContent="Select a project";const o=document.querySelector(".projectList");let s=o.lastElementChild;for(;s;)o.removeChild(s),s=o.lastElementChild;e.selected=!1,e.deleted=!0,u()}}))})),save.addEventListener("click",(()=>{localStorage.setItem("allprojects",JSON.stringify(e)),console.log(localStorage)})),{addProject:()=>{b(),m();let o=d++;e.forEach((e=>{e.selected=!1}));const l=t.projectFactory("New Project",!0,o);console.log(l),e.push(l);const r=document.createElement("h2");r.textContent="New Project",r.classList.add("selected"),r.classList.add("selector"),r.setAttribute("id",o),s.appendChild(r),console.log(e),document.querySelector("#ptitle").textContent="New Project",c.disabled=!1,c.classList.add("online"),c.classList.remove("offline"),n.disabled=!0,n.classList.add("offline"),n.classList.remove("online"),a.disabled=!0,a.classList.add("offline"),a.classList.remove("online"),i.disabled=!0,i.classList.add("offline"),i.classList.remove("online")},designEmptyTodo:()=>{p(),c.disabled=!0,c.classList.remove("online"),c.classList.add("offline"),a.disabled=!1,a.classList.remove("offline"),a.classList.add("online"),i.disabled=!1,i.classList.remove("offline"),i.classList.add("online"),document.querySelector("#ptitle").setAttribute("contenteditable",!0);let d=o++;const s=document.createElement("div");s.classList.add("todocard"),s.classList.add("selectedtodo"),s.setAttribute("id",d),l.appendChild(s);const n=document.createElement("h3");n.classList.add("todotitle"),n.setAttribute("contenteditable","true"),n.textContent="Give your todo a title",s.appendChild(n);const r=document.createElement("p");r.classList.add("tododesc"),r.setAttribute("contenteditable","true"),s.appendChild(r);const u=document.createElement("div");u.classList.add("radiobuttons"),s.appendChild(u);const m=document.createElement("p");m.classList.add("priotitle"),m.textContent="Priority:",u.appendChild(m);const b=document.createElement("input");b.classList.add("todopriolow"),b.setAttribute("id","prio"),b.setAttribute("name","prio"),b.setAttribute("type","radio"),b.setAttribute("value","low"),u.appendChild(b);const h=document.createElement("label");h.textContent="Low",h.setAttribute("for","low"),u.appendChild(h);const f=document.createElement("input");f.classList.add("todopriomedium"),f.setAttribute("id","prio"),f.setAttribute("name","prio"),f.setAttribute("type","radio"),f.setAttribute("value","medium"),u.appendChild(f);const L=document.createElement("label");L.textContent="Medium",L.setAttribute("for","medium"),u.appendChild(L);const A=document.createElement("input");A.classList.add("todopriohigh"),A.setAttribute("id","prio"),A.setAttribute("name","prio"),A.setAttribute("type","radio"),A.setAttribute("value","high"),u.appendChild(A);const E=document.createElement("label");E.textContent="High",E.setAttribute("for","high"),u.appendChild(E);const C=document.createElement("div");C.classList.add("date"),s.appendChild(C);const g=document.createElement("label");g.classList.add("datelabel"),g.setAttribute("for","duedate"),g.textContent="Due: ",C.appendChild(g);const y=document.createElement("p");y.classList.add("duedate"),y.setAttribute("contenteditable","true"),C.appendChild(y);const v=t.todoFactory("","","","",!0,d);e.forEach((e=>{!0===e.selected&&(e.todolists.push(v),console.log(e.todolists))}))},allProjects:e}})(),t={projectFactory:(e,t,d)=>({name:e,selected:t,todolists:[],id:d,deleted:!1}),Projects:[],todoFactory:(e,t,d,o,s,l)=>({title:e,description:t,priority:d,duedate:o,selected:s,id:l,deleted:!1})};document.querySelector("#createproject").addEventListener("click",e.addProject),document.querySelector(".addtodo").addEventListener("click",e.designEmptyTodo),document.querySelector(".projectList")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,