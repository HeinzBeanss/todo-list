(()=>{"use strict";const e=(()=>{let e=[],d=1;document.querySelector(".sidebartop");const o=document.querySelector(".projectList"),s=document.querySelector(".todolists"),l=document.querySelector(".savebutton");l.disabled=!0;const i=document.querySelector(".addtodo"),c=document.querySelector(".deletetodo");c.disabled=!0;const n=document.querySelector(".edittodo");n.disabled=!0;const a=document.querySelector("#deleteproject"),r=(document.querySelector("#editproject"),()=>{document.querySelectorAll(".selected").forEach((e=>{e.classList.remove("selected")})),e.forEach((e=>{e.selected=!1}))}),u=()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{e.selected=!1}))})),document.querySelectorAll(".selectedtodo").forEach((e=>{e.classList.remove("selectedtodo")}))},m=()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{e.selected=!1}))}));let t=s.lastElementChild;for(;t;)s.removeChild(t),t=s.lastElementChild},p=()=>{};return localStorage.getItem("allprojects")?p():(localStorage.setItem("allprojects",e),p()),o.addEventListener("click",(t=>{r(),u(),t.target.classList.add("selected"),console.log(t.target),console.log(e);let d=t.target.getAttribute("id");console.log(d),e.forEach((t=>{t.id==d&&(t.selected=!0,m(),e.forEach((e=>{!0===e.selected&&!1===e.deleted&&(document.querySelector("#ptitle").textContent=e.name,e.todolists.forEach((e=>{if(!1===e.deleted){const t=document.createElement("div");t.classList.add("todocard"),t.setAttribute("id",e.id),s.appendChild(t);const d=document.createElement("h3");d.classList.add("todotitle"),d.setAttribute("contenteditable","false"),d.textContent=e.title,t.appendChild(d);const o=document.createElement("p");o.classList.add("tododesc"),o.setAttribute("contenteditable","false"),o.textContent=e.description,t.appendChild(o);const l=document.createElement("div");l.classList.add("radiobuttons"),t.appendChild(l);const i=document.createElement("p");i.classList.add("priotitle"),i.textContent="Priority:",l.appendChild(i);const c=document.createElement("input");c.classList.add("todopriolow"),c.setAttribute("id","prio"),c.setAttribute("name","prio"),c.setAttribute("type","radio"),c.setAttribute("value","low"),c.setAttribute("disabled",""),l.appendChild(c);const n=document.createElement("label");n.textContent="Low",n.setAttribute("for","low"),l.appendChild(n);const a=document.createElement("input");a.classList.add("todopriomedium"),a.setAttribute("id","prio"),a.setAttribute("name","prio"),a.setAttribute("type","radio"),a.setAttribute("value","medium"),a.setAttribute("disabled",""),l.appendChild(a);const r=document.createElement("label");r.textContent="Medium",r.setAttribute("for","medium"),l.appendChild(r);const u=document.createElement("input");u.classList.add("todopriohigh"),u.setAttribute("id","prio"),u.setAttribute("name","prio"),u.setAttribute("type","radio"),u.setAttribute("value","high"),u.setAttribute("disabled",""),l.appendChild(u);const m=document.createElement("label");m.textContent="High",m.setAttribute("for","high"),l.appendChild(m),"low"===e.priority?c.setAttribute("checked",""):"medium"===e.priority?a.setAttribute("checked",""):"high"===e.priority&&u.setAttribute("checked","");const p=document.createElement("div");p.classList.add("date"),t.appendChild(p);const b=document.createElement("label");b.classList.add("datelabel"),b.setAttribute("for","duedate"),b.textContent="Due: ",p.appendChild(b);const h=document.createElement("p");h.classList.add("duedate"),h.setAttribute("contenteditable","false"),h.textContent=e.duedate,p.appendChild(h)}})))})))}))})),s.addEventListener("click",(t=>{console.log(t.target),u();let d=t.target,o=d.getAttribute("class"),s=d.getAttribute("id"),l=t.target.parentNode,i=l.getAttribute("class"),a=l.getAttribute("id"),r=l.parentNode,m=(r.getAttribute("class"),r.getAttribute("id"));if(e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{e.id!=s&&e.id!=a&&e.id!=m||(e.selected=!0)}))})),console.log(e),"todolists"===o);else if("todocard"===o)console.log(o),t.target.classList.add("selectedtodo"),console.log("it's done via child.");else if("radiobuttons"===i)t.target.parentNode.parentNode.classList.add("selectedtodo"),console.log("a fucking annoying ass radio button element was pressed.");else if("date"===i)t.target.parentNode.parentNode.classList.add("selectedtodo"),console.log("a fucking annoying ass duedate shit element was pressed.");else{let e=t.target;console.log(t.target.parentNode),e.parentNode.classList.add("selectedtodo"),console.log("it's done via parent.")}n.disabled=!1,n.classList.add("online"),n.classList.remove("offline"),c.disabled=!1,c.classList.add("online"),c.classList.remove("offline")})),l.addEventListener("click",(()=>{e.forEach((e=>{if(!0===e.selected){const t=document.querySelector("#ptitle");e.name=t.textContent,document.querySelector(".selected").textContent=e.name,t.setAttribute("contenteditable","false"),e.todolists.forEach((e=>{if(!0===e.selected){document.querySelectorAll(".todotitle").forEach((e=>{e.setAttribute("contenteditable","false")})),document.querySelectorAll(".tododesc").forEach((e=>{e.setAttribute("contenteditable","false")})),document.querySelectorAll("input").forEach((e=>{e.setAttribute("disabled","")})),document.querySelectorAll(".date").forEach((e=>{e.setAttribute("contenteditable","false")}));const t=document.querySelector(".selectedtodo");e.title=t.firstChild.textContent,e.description=t.childNodes[1].textContent;for(let d=0;d<t.childNodes[2].childNodes.length;d++)t.childNodes[2].childNodes[d].checked&&(console.log(t.childNodes[2].childNodes[d]),e.priority=t.childNodes[2].childNodes[d].value,t.childNodes[2].childNodes[d].removeAttribute("disabled",""));e.duedate=t.childNodes[3].childNodes[1].textContent,console.log(e)}})),l.disabled=!0,l.classList.remove("online"),l.classList.add("offline"),i.disabled=!1,i.classList.add("online"),i.classList.remove("offline"),n.disabled=!1,n.classList.add("online"),n.classList.remove("offline")}}))})),c.addEventListener("click",(()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{!0===e.selected&&(document.querySelector(".selectedtodo").remove(),e.deleted=!0,console.log(e),i.disabled=!1,i.classList.add("online"),i.classList.remove("offline"),l.disabled=!1,l.classList.add("offline"),l.classList.remove("online"))}))})),c.disabled=!0,c.classList.add("offline"),c.classList.remove("online")})),n.addEventListener("click",(()=>{e.forEach((e=>{!0===e.selected&&(document.querySelector("#ptitle").setAttribute("contenteditable",!0),e.todolists.forEach((e=>{if(!0===e.selected){i.disabled=!0,i.classList.remove("online"),i.classList.add("offline"),l.disabled=!1,l.classList.add("online"),l.classList.remove("offline"),o.disabled=!0,s.disabled=!0;const e=document.querySelector(".selectedtodo");e.firstChild.setAttribute("contenteditable","true"),e.childNodes[1].setAttribute("contenteditable","true"),e.querySelectorAll("input").forEach((e=>{e.removeAttribute("disabled")})),e.querySelector(".duedate").setAttribute("contenteditable","true")}})))}))})),a.addEventListener("click",(()=>{e.forEach((t=>{if(!0===t.selected){const d=document.querySelector(".todolists");let s=d.lastElementChild;for(;s;)d.removeChild(s),s=d.lastElementChild;document.querySelector("#ptitle").textContent="";const l=document.querySelector(".projectList");let i=l.lastElementChild;for(;i;)l.removeChild(i),i=l.lastElementChild;t.selected=!1,t.deleted=!0,e.forEach((e=>{if(!1===e.deleted){const t=document.createElement("h2");t.textContent=e.name,t.classList.add("selector"),t.setAttribute("id",e.id),o.appendChild(t)}}))}}))})),{addProject:()=>{m(),r();let s=d++;e.forEach((e=>{e.selected=!1}));const i=t.projectFactory("New Project",!0,s);console.log(i),e.push(i);const a=document.createElement("h2");a.textContent="New Project",a.classList.add("selected"),a.classList.add("selector"),a.setAttribute("id",s),o.appendChild(a),console.log(e),document.querySelector("#ptitle").textContent="New Project",n.disabled=!0,n.classList.add("offline"),n.classList.remove("online"),c.disabled=!0,c.classList.add("offline"),c.classList.remove("online"),l.disabled=!0,l.classList.add("offline"),l.classList.remove("online")},designEmptyTodo:()=>{u(),i.disabled=!0,i.classList.remove("online"),i.classList.add("offline"),c.disabled=!1,c.classList.remove("offline"),c.classList.add("online"),l.disabled=!1,l.classList.remove("offline"),l.classList.add("online"),document.querySelector("#ptitle").setAttribute("contenteditable",!0);let o=d++;const n=document.createElement("div");n.classList.add("todocard"),n.classList.add("selectedtodo"),n.setAttribute("id",o),s.appendChild(n);const a=document.createElement("h3");a.classList.add("todotitle"),a.setAttribute("contenteditable","true"),a.textContent="Give your todo a title",n.appendChild(a);const r=document.createElement("p");r.classList.add("tododesc"),r.setAttribute("contenteditable","true"),n.appendChild(r);const m=document.createElement("div");m.classList.add("radiobuttons"),n.appendChild(m);const p=document.createElement("p");p.classList.add("priotitle"),p.textContent="Priority:",m.appendChild(p);const b=document.createElement("input");b.classList.add("todopriolow"),b.setAttribute("id","prio"),b.setAttribute("name","prio"),b.setAttribute("type","radio"),b.setAttribute("value","low"),m.appendChild(b);const h=document.createElement("label");h.textContent="Low",h.setAttribute("for","low"),m.appendChild(h);const f=document.createElement("input");f.classList.add("todopriomedium"),f.setAttribute("id","prio"),f.setAttribute("name","prio"),f.setAttribute("type","radio"),f.setAttribute("value","medium"),m.appendChild(f);const L=document.createElement("label");L.textContent="Medium",L.setAttribute("for","medium"),m.appendChild(L);const A=document.createElement("input");A.classList.add("todopriohigh"),A.setAttribute("id","prio"),A.setAttribute("name","prio"),A.setAttribute("type","radio"),A.setAttribute("value","high"),m.appendChild(A);const E=document.createElement("label");E.textContent="High",E.setAttribute("for","high"),m.appendChild(E);const C=document.createElement("div");C.classList.add("date"),n.appendChild(C);const g=document.createElement("label");g.classList.add("datelabel"),g.setAttribute("for","duedate"),g.textContent="Due: ",C.appendChild(g);const y=document.createElement("p");y.classList.add("duedate"),y.setAttribute("contenteditable","true"),C.appendChild(y);const v=t.todoFactory("","","","",!0,o);e.forEach((e=>{!0===e.selected&&(e.todolists.push(v),console.log(e.todolists))}))},allProjects:e}})(),t={projectFactory:(e,t,d)=>({name:e,selected:t,todolists:[],id:d,deleted:!1}),Projects:[],todoFactory:(e,t,d,o,s,l)=>({title:e,description:t,priority:d,duedate:o,selected:s,id:l,deleted:!1})};document.querySelector("#createproject").addEventListener("click",e.addProject),document.querySelector(".addtodo").addEventListener("click",e.designEmptyTodo);const d=t.projectFactory("General",!0,0);e.allProjects.push(d)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,