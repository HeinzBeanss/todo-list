(()=>{"use strict";const e=(()=>{let e=[],d=1;document.querySelector(".sidebartop");const o=document.querySelector(".projectList"),s=document.querySelector(".todolists"),l=document.querySelector(".savebutton");l.disabled=!0;const i=document.querySelector(".addtodo"),c=document.querySelector(".deletetodo");c.disabled=!0;const a=document.querySelector(".edittodo");a.disabled=!0;const n=()=>{document.querySelectorAll(".selected").forEach((e=>{e.classList.remove("selected")})),e.forEach((e=>{e.selected=!1}))},r=()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{e.selected=!1}))})),document.querySelectorAll(".selectedtodo").forEach((e=>{e.classList.remove("selectedtodo")}))},u=()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{e.selected=!1}))}));let t=s.lastElementChild;for(;t;)s.removeChild(t),t=s.lastElementChild};return o.addEventListener("click",(t=>{n(),r(),t.target.classList.add("selected"),console.log(t.target),console.log(e);let d=t.target.getAttribute("id");console.log(d),e.forEach((t=>{t.id==d&&(t.selected=!0,u(),e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{const t=document.createElement("div");t.classList.add("todocard"),t.setAttribute("id",e.id),s.appendChild(t);const d=document.createElement("h3");d.classList.add("todotitle"),d.setAttribute("contenteditable","false"),d.textContent=e.title,t.appendChild(d);const o=document.createElement("p");o.classList.add("tododesc"),o.setAttribute("contenteditable","false"),o.textContent=e.description,t.appendChild(o);const l=document.createElement("div");l.classList.add("radiobuttons"),t.appendChild(l);const i=document.createElement("p");i.classList.add("priotitle"),i.textContent="Priority:",l.appendChild(i);const c=document.createElement("input");c.classList.add("todopriolow"),c.setAttribute("id","prio"),c.setAttribute("name","prio"),c.setAttribute("type","radio"),c.setAttribute("value","low"),c.setAttribute("disabled",""),l.appendChild(c);const a=document.createElement("label");a.textContent="Low",a.setAttribute("for","low"),l.appendChild(a);const n=document.createElement("input");n.classList.add("todopriomedium"),n.setAttribute("id","prio"),n.setAttribute("name","prio"),n.setAttribute("type","radio"),n.setAttribute("value","medium"),n.setAttribute("disabled",""),l.appendChild(n);const r=document.createElement("label");r.textContent="Medium",r.setAttribute("for","medium"),l.appendChild(r);const u=document.createElement("input");u.classList.add("todopriohigh"),u.setAttribute("id","prio"),u.setAttribute("name","prio"),u.setAttribute("type","radio"),u.setAttribute("value","high"),u.setAttribute("disabled",""),l.appendChild(u);const p=document.createElement("label");p.textContent="High",p.setAttribute("for","high"),l.appendChild(p),"low"===e.priority?c.setAttribute("checked",""):"medium"===e.priority?n.setAttribute("checked",""):"high"===e.priority&&u.setAttribute("checked","");const m=document.createElement("div");m.classList.add("date"),t.appendChild(m);const b=document.createElement("label");b.classList.add("datelabel"),b.setAttribute("for","duedate"),b.textContent="Due: ",m.appendChild(b);const h=document.createElement("p");h.classList.add("duedate"),h.setAttribute("contenteditable","false"),h.textContent=e.duedate,m.appendChild(h)}))})))}))})),s.addEventListener("click",(t=>{console.log(t.target),r();let d=t.target,o=d.getAttribute("class"),s=d.getAttribute("id"),l=t.target.parentNode,i=l.getAttribute("class"),n=l.getAttribute("id"),u=l.parentNode,p=(u.getAttribute("class"),u.getAttribute("id"));if(e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{e.id!=s&&e.id!=n&&e.id!=p||(e.selected=!0)}))})),console.log(e),"todolists"===o);else if("todocard"===o)console.log(o),t.target.classList.add("selectedtodo"),console.log("it's done via child.");else if("radiobuttons"===i)t.target.parentNode.parentNode.classList.add("selectedtodo"),console.log("a fucking annoying ass radio button element was pressed.");else if("date"===i)t.target.parentNode.parentNode.classList.add("selectedtodo"),console.log("a fucking annoying ass duedate shit element was pressed.");else{let e=t.target;console.log(t.target.parentNode),e.parentNode.classList.add("selectedtodo"),console.log("it's done via parent.")}a.disabled=!1,a.classList.add("online"),a.classList.remove("offline"),c.disabled=!1,c.classList.add("online"),c.classList.remove("offline")})),l.addEventListener("click",(()=>{e.forEach((e=>{!0===e.selected&&(e.todolists.forEach((e=>{if(!0===e.selected){document.querySelectorAll(".todotitle").forEach((e=>{e.setAttribute("contenteditable","false")})),document.querySelectorAll(".tododesc").forEach((e=>{e.setAttribute("contenteditable","false")})),document.querySelectorAll("input").forEach((e=>{e.setAttribute("disabled","")})),document.querySelectorAll(".date").forEach((e=>{e.setAttribute("contenteditable","false")}));const t=document.querySelector(".selectedtodo");e.title=t.firstChild.textContent,e.description=t.childNodes[1].textContent;for(let d=0;d<t.childNodes[2].childNodes.length;d++)t.childNodes[2].childNodes[d].checked&&(console.log(t.childNodes[2].childNodes[d]),e.priority=t.childNodes[2].childNodes[d].value,t.childNodes[2].childNodes[d].removeAttribute("disabled",""));e.duedate=t.childNodes[3].childNodes[1].textContent,console.log(e)}})),l.disabled=!0,l.classList.remove("online"),l.classList.add("offline"),i.disabled=!1,i.classList.add("online"),i.classList.remove("offline"),a.disabled=!1,a.classList.add("online"),a.classList.remove("offline"))}))})),c.addEventListener("click",(()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{!0===e.selected&&(document.querySelector(".selectedtodo").remove(),e.deleted=!0,console.log(e),i.disabled=!1,i.classList.add("online"),i.classList.remove("offline"),l.disabled=!1,l.classList.add("offline"),l.classList.remove("online"))}))})),c.disabled=!0,c.classList.add("offline"),c.classList.remove("online")})),a.addEventListener("click",(()=>{e.forEach((e=>{!0===e.selected&&e.todolists.forEach((e=>{if(!0===e.selected){i.disabled=!0,i.classList.remove("online"),i.classList.add("offline"),l.disabled=!1,l.classList.add("online"),l.classList.remove("offline"),o.disabled=!0,s.disabled=!0;const e=document.querySelector(".selectedtodo");e.firstChild.setAttribute("contenteditable","true"),e.childNodes[1].setAttribute("contenteditable","true"),e.querySelectorAll("input").forEach((e=>{e.removeAttribute("disabled")})),e.querySelector(".duedate").setAttribute("contenteditable","true")}}))}))})),{addProject:()=>{u(),n();let s=d++;e.forEach((e=>{e.selected=!1}));const i=t.projectFactory("project",!0,s);console.log(i),e.push(i);const r=document.createElement("h2");r.textContent="New Project",r.classList.add("selected"),r.classList.add("selector"),r.setAttribute("id",s),o.appendChild(r),console.log(e),a.disabled=!0,a.classList.add("offline"),a.classList.remove("online"),c.disabled=!0,c.classList.add("offline"),c.classList.remove("online"),l.disabled=!0,l.classList.add("offline"),l.classList.remove("online")},designEmptyTodo:()=>{r(),i.disabled=!0,i.classList.remove("online"),i.classList.add("offline"),c.disabled=!1,c.classList.remove("offline"),c.classList.add("online"),l.disabled=!1,l.classList.remove("offline"),l.classList.add("online");let o=d++;const a=document.createElement("div");a.classList.add("todocard"),a.classList.add("selectedtodo"),a.setAttribute("id",o),s.appendChild(a);const n=document.createElement("h3");n.classList.add("todotitle"),n.setAttribute("contenteditable","true"),n.textContent="Give your todo a title",a.appendChild(n);const u=document.createElement("p");u.classList.add("tododesc"),u.setAttribute("contenteditable","true"),a.appendChild(u);const p=document.createElement("div");p.classList.add("radiobuttons"),a.appendChild(p);const m=document.createElement("p");m.classList.add("priotitle"),m.textContent="Priority:",p.appendChild(m);const b=document.createElement("input");b.classList.add("todopriolow"),b.setAttribute("id","prio"),b.setAttribute("name","prio"),b.setAttribute("type","radio"),b.setAttribute("value","low"),p.appendChild(b);const h=document.createElement("label");h.textContent="Low",h.setAttribute("for","low"),p.appendChild(h);const f=document.createElement("input");f.classList.add("todopriomedium"),f.setAttribute("id","prio"),f.setAttribute("name","prio"),f.setAttribute("type","radio"),f.setAttribute("value","medium"),p.appendChild(f);const L=document.createElement("label");L.textContent="Medium",L.setAttribute("for","medium"),p.appendChild(L);const A=document.createElement("input");A.classList.add("todopriohigh"),A.setAttribute("id","prio"),A.setAttribute("name","prio"),A.setAttribute("type","radio"),A.setAttribute("value","high"),p.appendChild(A);const E=document.createElement("label");E.textContent="High",E.setAttribute("for","high"),p.appendChild(E);const C=document.createElement("div");C.classList.add("date"),a.appendChild(C);const g=document.createElement("label");g.classList.add("datelabel"),g.setAttribute("for","duedate"),g.textContent="Due: ",C.appendChild(g);const v=document.createElement("p");v.classList.add("duedate"),v.setAttribute("contenteditable","true"),C.appendChild(v);const y=t.todoFactory("","","","",!0,o);e.forEach((e=>{!0===e.selected&&(e.todolists.push(y),console.log(e.todolists))}))},allProjects:e}})(),t={projectFactory:(e,t,d)=>({name:e,selected:t,todolists:[],id:d}),Projects:[],todoFactory:(e,t,d,o,s,l)=>({title:e,description:t,priority:d,duedate:o,selected:s,id:l,deleted:!1})};document.querySelector("#createproject").addEventListener("click",e.addProject),document.querySelector(".addtodo").addEventListener("click",e.designEmptyTodo);const d=t.projectFactory("General",!0,0);e.allProjects.push(d)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,